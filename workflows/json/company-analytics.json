{
	"name": "Dynamic Company Analytics",
	"description": "üîç Business Intelligence Tool: Transform natural language questions into SQL queries and retrieve real company metrics. Supports 6 departments (Sales, Finance, DevRel, HR, Events, Compliance) with 74+ different metrics including revenue, pipeline, employee satisfaction, social media growth, and more. Ask questions like: 'Show me last month's sales metrics', 'What were our Q4 DevRel results?', 'Compare HR satisfaction across departments', or 'Give me our total pipeline numbers'. Automatically detects departments, date ranges, aggregations, and generates appropriate SQL queries. Zero hardcoding - fully dynamic schema discovery.",
	"version": "1.0.0",
	"trigger": {
		"http": {
			"method": "POST",
			"path": "/",
			"accept": "application/json",
			"schema": {
				"type": "object",
				"properties": {
					"query": {
						"type": "string",
						"description": "Natural language business question (e.g., 'Show me last month DevRel metrics')"
					},
					"department": {
						"type": "string",
						"description": "Optional: Specific department filter (sales, finance, devrel, hr, events, compliance)",
						"enum": ["sales", "finance", "devrel", "hr", "events", "compliance"]
					},
					"date_range": {
						"type": "string", 
						"description": "Optional: Date range filter (q1, q4, last_month, this_year)",
						"enum": ["q1", "q2", "q3", "q4", "last_month", "this_month", "this_year"]
					},
					"debug": {
						"type": "boolean",
						"description": "Include debug information about pattern matching"
					}
				},
				"required": ["query"],
				"additionalProperties": false
			}
		}
	},
	"steps": [
		{
			"name": "setup-database",
			"node": "database-config",
			"type": "module"
		},
		{
			"name": "discover-schema",
			"node": "schema-discovery",
			"type": "module"
		},
		{
			"name": "process-query",
			"node": "business-context-query",
			"type": "module"
		},
		{
			"name": "execute-query",
			"node": "postgres-analytics",
			"type": "module"
		},
		{
			"name": "format-response",
			"node": "mapper",
			"type": "module"
		}
	],
	"nodes": {
		"setup-database": {
			"inputs": {
				"host": "localhost",
				"port": 5432,
				"database": "company_analytics",
				"user": "postgres",
				"password": "password123"
			}
		},
		"discover-schema": {
			"inputs": {
				"include_stats": true
			}
		},
		"process-query": {
			"inputs": {
				"query": "${ctx.request.body.query || ctx.request.body.prompt}",
				"department": "js/ctx.request.body.department || undefined",
				"date_range": "js/ctx.request.body.date_range || undefined",
				"debug": "js/Boolean(ctx.request.body.debug)"
			}
		},
		"execute-query": {
			"inputs": {
				"host": "localhost",
				"port": 5432,
				"database": "company_analytics",
				"user": "postgres",
				"password": "password123",
				"query": "${ctx.vars.generated_query}",
				"parameters": "js/ctx.vars.query_parameters || []"
			}
		},
		"format-response": {
			"inputs": {
				"model": {
					"query": "${ctx.request.body.query}",
					"sql_generated": "${ctx.vars.generated_query}",
					"explanation": "${ctx.vars.explanation || 'SQL generated from natural language'}",
					"matched_patterns": "${ctx.vars.matched_patterns || 'Department and date patterns detected'}",
					"results": "js/ctx.response.data.data",
					"total_results": "${ctx.response.data.total}",
					"execution_time": "${ctx.response.data.execution_time}",
					"timestamp": "js/new Date().toISOString()"
				}
			}
		}
	}
} 